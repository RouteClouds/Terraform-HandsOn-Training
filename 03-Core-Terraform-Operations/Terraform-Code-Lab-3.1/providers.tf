# AWS Terraform Training - Core Terraform Operations
# Lab 3.1: Core Workflow and Resource Lifecycle Management
# File: providers.tf - Provider Configuration

terraform {
  required_version = "~> 1.13.0"
  
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 6.12.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "~> 3.6.0"
    }
    local = {
      source  = "hashicorp/local"
      version = "~> 2.4.0"
    }
    archive = {
      source  = "hashicorp/archive"
      version = "~> 2.4.0"
    }
  }

  # Remote state backend (optional for lab)
  # Uncomment and configure for team collaboration
  # backend "s3" {
  #   bucket         = "terraform-state-bucket"
  #   key            = "core-operations/terraform.tfstate"
  #   region         = "us-east-1"
  #   dynamodb_table = "terraform-state-locks"
  #   encrypt        = true
  # }
}

# AWS Provider Configuration
provider "aws" {
  region = var.aws_region

  # Default tags applied to all resources
  default_tags {
    tags = {
      # Project metadata
      Project              = var.project_name
      Environment          = var.environment
      TrainingModule       = "03-core-terraform-operations"
      
      # Technical metadata
      ManagedBy            = "terraform"
      TerraformVersion     = "1.13.x"
      ProviderVersion      = "6.12.x"
      
      # Operational metadata
      Student              = var.student_name
      Owner                = var.owner_email
      CostCenter           = var.cost_center
      CreatedDate          = timestamp()
      
      # Lab-specific metadata
      Lab                  = "core-terraform-operations"
      LabVersion           = "3.1"
      Workspace            = terraform.workspace
      
      # Cost optimization metadata
      AutoShutdown         = var.auto_shutdown_enabled
      CostOptimization     = "enabled"
      
      # Compliance metadata
      DataClassification   = var.data_classification
      BackupRequired       = var.backup_required
      MonitoringEnabled    = var.monitoring_enabled
    }
  }

  # Ignore specific tags during updates to prevent drift
  ignore_tags {
    keys = [
      "LastAccessed",
      "TemporaryTag",
      "AutoGenerated",
      "LastModified"
    ]
    
    key_prefixes = [
      "aws:",
      "kubernetes.io/",
      "eks:",
      "auto-"
    ]
  }
}

# Random Provider for unique resource naming
provider "random" {
  # No specific configuration required
}

# Local Provider for file operations
provider "local" {
  # No specific configuration required
}

# Archive Provider for creating deployment packages
provider "archive" {
  # No specific configuration required
}
